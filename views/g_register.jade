extends ./g_layout.jade
block vars
  - var page = 'register'
block head
  title S'inscrire
  meta(name='description', content='Inscrivez-vous pour trouver du bénévolat, ou recruter des bénévoles')
block content
      #map-section.container-fluid
        .row
          .col-md-4.col-md-offset-4
            .page-header
              h1 #{__("signup")}
              .alert.alert-danger.hidden#email-exists 
                |  #{__("email_already")}
              if error
                p.alert.alert-danger #{error}
                  .input-group.conn-input
                label.control-label #{__("email")}
                input#mail.form-control(type='email', placeholder='Ex: contact@simplyk.org', name='email', aria-describedby='basic-addon1', required)
          .col-md-2.col-md-offset-1
            .page-header
              h4 #{__("already_account")}
            a.btn.btn-default(href='/login') #{__("signin")}
        .row
          .col-md-4.col-md-offset-4
            form#registerform(action="/register_#{type}", method="post", role='form')
              if type == 'volunteer'
                .row
                  .col-md-6
                    .form-group.conn-input
                      label.control-label #{__("email")} *
                      input#mail.form-control(type='email', placeholder='Ex: contact@simplyk.org', name='email', aria-describedby='basic-addon1', required)
                    .form-group.conn-input
                      label.control-label #{__("firstname")} *
                      input#firstname.form-control(type='text', placeholder='', name='firstname', aria-describedby='basic-addon1', required)
                    .form-group.conn-input
                      label.control-label #{__("lastname")} *
                      input#lastname.form-control(type='text', name='lastname', aria-describedby='basic-addon1', required)
                  .col-md-6
                    .form-group.conn-input
                      label.control-label #{__("birthdate")} *
                      i.fa.fa-question-circle(data-toggle='tooltip' data-placement='top' title=__("g_register_birth"))
                      input#birthdate.form-control(type='date', placeholder='', name='birthdate', aria-describedby='basic-addon1' required)
                    .form-group.conn-input
                      label.control-label #{__("phone")}
                      input#mail.form-control(type='text', placeholder='Ex: 514 314 1592', name='phone', aria-describedby='basic-addon1')
                    .form-group.conn-input
                      label.control-label #{__("define_password")} *
                      input#password.form-control(type='password', placeholder='', name='password', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  input#admin_checkbox(type='checkbox' name='admin_checkbox') 
                  | #{__("currently_school")}
                  br
                  .form-group.conn-input.hidden#admin_dropdown
                    label.control-label #{__(educationnal)}
                    select#admin.form-control(placeholder='', name='admin', aria-describedby='basic-addon1')
                      each school, school_i in schools_list
                        option= school
                  .form-group.conn-input.hidden#classes_dropdown
                    label.control-label #{__(classe)}
                    each client, client_i in clients
                      select.form-control.hidden(placeholder='', aria-describedby='basic-addon1', id=client.id, class='client_classes_item')
                        each classe, classe_i in client.classes
                          option= classe  
              if type == 'organism'
                .form-group.conn-input
                  label.control-label #{__('org_name')} *
                  input#mail.form-control(type='text', placeholder='Ex: Simplyk', name='name', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label #{__('org_description')} *
                  textarea.form-control(rows='6', name='description', aria-describedby='basic-addon1',required) 
                .form-group.conn-input
                  label.control-label #{__("phone")} *
                  input#mail.form-control(type='text', placeholder='Ex: 514 314 1592', name='phone', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label #{__('website')} *
                  input#mail.form-control(type='text', placeholder='Ex: www.simplyk.org', name='website', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label Cause
                  select#cause.form-control(placeholder='', name='cause', aria-describedby='basic-addon1')
                    option #{__('nature')}
                    option #{__('solidarity')}
                    option #{__('culture')}
                    option #{__('child')}
                h2 #{__('g_register_responsible')}
                .form-group.conn-input
                  label.control-label #{__('firstname')} *
                  input#firstname.form-control(type='text', placeholder='', name='firstname', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label #{__('lastname')} *
                  input#lastname.form-control(type='text', name='lastname', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label #{__('email')} (#{__('g_register_linked')}) *
                  i.fa.fa-question-circle(data-toggle='tooltip' data-placement='top' title=__('g_register_email_expl'))
                  input#mail.form-control(type='email', placeholder='Ex: francois@simplyk.io', name='email', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label #{__('define_password')} *
                  input#password.form-control(type='password', placeholder='', name='password', aria-describedby='basic-addon1', required)
              //if type == 'admin'
                .form-group.conn-input
                  label.control-label Nom de l'organisation
                  input#name.form-control(type='text', name='name', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label Nom
                  input#lastname.form-control(type='text', name='lastname', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label Prénom
                  input#firstname.form-control(type='text', placeholder='', name='firstname', aria-describedby='basic-addon1', required)
                .form-group.conn-input
                  label.control-label Type d'organisation
                  select#type.form-control(placeholder='', name='type', aria-describedby='basic-addon1')
                    option Entreprise
                    option École
              .form-group.conn-input
                p.
                  #{__('g_register_legal1')} <a href="\legal" target="_blank">#{__('Use_terms')}</a>. #{__('g_register_legal2')}
              .form-group.conn-input
                input.btn.btn-default#submit-button(type='submit', form='registerform', value=__('signup'), style='margin-bottom: 50px;')
block footscript
  script(src="/bower_components/jquery-ui/ui/widgets/datepicker.js")
  script.
    $(document).ready(function(){
      'use strict';
      var event_props = {};
      if (window.location.pathname == '/register_organism'){
        event_props.type = 'org';
      } else if (window.location.pathname == '/register_volunteer') {
        event_props.type = 'vol';
      } else {
        event_props.type = 'prob';
      }
      if (env == 'prod') {
        amplitude.getInstance().logEvent('g_visit_register', event_props);
      }
      var clients = !{JSON.stringify(clients)};
      if ( $('#birthdate').prop('type') != 'date' ) {
        $('#birthdate').datepicker({
          changeMonth: true,
          changeYear: true,
          yearRange: "1950:2020"
        });
      }
      $('#admin_checkbox').click(function(){
        $('#admin_dropdown').removeClass('hidden');
        $('#admin_dropdown').toggle(this.checked);
        $('#classes_dropdown').toggle(this.checked);
      });
      $('#admin').change(function(){
        $('#classes_dropdown').addClass('hidden');
        $('.client_classes_item').addClass('hidden');
        $('.client_classes_item').removeAttr('name');
        console.info('Admin changed');
        var school = $('#admin').val();
        var school_index = clients.map(function(c){return c.name;}).indexOf(school);
        if (school_index != -1){
          var classes_number = clients[school_index].classes.length;
          if(classes_number>0){
            var client_selected_id = clients[school_index].id;
            $('#classes_dropdown').removeClass('hidden');
            $('#'+client_selected_id).removeClass('hidden');
            $('#'+client_selected_id).attr('name', 'classe');
            console.info('Admin changed and this is a client school');
          }
        }
      });
    })
    var password = document.getElementById('password');
  script.
    var event_props = {};
    if (window.location.pathname == '/register_organism'){
      event_props.type = 'org';
    } else if (window.location.pathname == '/register_volunteer') {
      event_props.type = 'vol';
    } else {
      event_props.type = 'prob';
    }
    $('form#registerform').submit(function(e) {
        e.preventDefault(); // Prevent default post
        var form = $(this);

        function onSuccess(response) {
            if(response.exists) {
                console.log('Email already exists'); 
                $('#email-exists').removeClass('hidden');
                window.scrollTo(0,0);
            }
            else{
                //Remove the current event handler and submit
                $('form#registerform').unbind('submit'); 
                $('form#registerform').submit();
                if (env == 'prod') {
                  amplitude.getInstance().logEvent('g_register', event_props);
                }
            }
        }

        $.ajax({
            type: 'POST',
            url: 'register_check', 
            data: form.serialize(),
            success: onSuccess
        });
    });
    $(function () {
      $('[data-toggle="tooltip"]').tooltip()
    })