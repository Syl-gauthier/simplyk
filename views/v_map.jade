extends ./g_layout.jade
block vars
  - var page = 'map'
  - var days_name = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi']
  - var months_name = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']
  - function correctDate(date){var tz_offset = (new Date()).getTimezoneOffset() * 60 * 1000;var corrected_datetime = new Date(date.getTime() + tz_offset);return corrected_datetime}


block content
  each act, index in activities
    div(tabindex='-1', role='dialog', class='modal fade ' + act._id, id=act._id)
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true') &times;        
            #myModalLabel.h4.modal-title #{act.event_intitule} <small>par</small> <b>#{act.org_name}</b>
          .modal-body.my-modal-body
            h4 <b>#{act.intitule}</b>
            table.table
              tr
                th.text-center Places restantes
                th.text-center Date
                th.text-center Heure de début
                th.text-center Heure de fin
              each day, nb in act.days
                tr
                  td.text-center= (day.vol_nb-day.applicants.length)
                  td.text-center= days_name[correctDate(day.day).getDay()]  + ' ' + correctDate(day.day).getDate() + ' ' + months_name[correctDate(day.day).getMonth()]  + ' ' + correctDate(day.day).getFullYear()
                  td.text-center= day.start_time
                  td.text-center= day.end_time
                #identifiant(style="display:none")
                  p= act._id
              p <b>Adresse : </b> #{act.address}
          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Fermer
            a.subscribe-button-activity.btn.btn-default(type='button' aria-expanded="false" aria-controls="collapseExample" activité = act._id, href='/activity/'+act._id) Plus d'infos
  each lt, index in longterms
    div(tabindex='-1', role='dialog', class='modal fade ' + lt.long_term._id, id=lt.long_term._id)
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true') &times;        
            #myModalLabel.h4.modal-title #{lt.long_term.intitule} <small>par</small> <b>#{lt.org_name}</b>
          .modal-body.my-modal-body
            h4 <b>#{lt.long_term.intitule}</b>
            p #{lt.long_term.description}
            p <b>Adresse : </b> #{lt.long_term.address}
          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Fermer
            a.subscribe-button-longterm.btn.btn-default(type='button' aria-expanded="false" aria-controls="collapseExample" longterm = lt.long_term._id, href='/longterm/'+lt.long_term._id) Plus d'infos
  .container-fluid
    .row.fill
      #offers-list.col-sm-5.hidden-xs.no-side-padding.scrollable
        ul.list-group.list-opportunity
          if error
            p.alert.alert-danger #{error}
          if success
            p.alert.alert-success #{success}
          each act, index in activities
              li.list-group-item(id= act._id)
                .panel.panel-default
                  .panel-heading
                    div.media-left.media-middle
                      a(href='#')
                        //img.media-object.little-img(src='/images/clouds.jpg')
                        if act.cause == 'Solidarité'
                          i.fa.fa-heart
                        else if act.cause == 'Environnement'
                          i.fa.fa-envira(style='color: #5BCF8F')
                        else if act.cause == 'Culture'
                          i.fa.fa-institution(style='color: #FFC858')
                    div.media-body
                      h4.media-heading <b>#{act.org_name}</b>
                      h5.media-heading <b>#{act.intitule}</b>
                      h6
                        i.fa.fa-map-marker
                        p.inline Adresse : #{act.address}
                    div.media-right.media-middle
                      button.btn.btn-default.media-object(type='button' data-toggle="modal" data-target= "."+act._id) Plus d'infos
                  .panel-body
                      h4 Dans le cadre de : <b>#{act.event_intitule}</b>
                      each day, day_i in act.days
                        h4
                          h5.inline <b>#{days_name[correctDate(day.day).getDay()]  + ' ' + correctDate(day.day).getDate() + ' ' + months_name[correctDate(day.day).getMonth()]  + ' ' + correctDate(day.day).getFullYear()} : </b>
                          h6.inline
                            i.fa.fa-user
                            p.inline= (day.vol_nb-day.applicants.length)+' places restantes'
      .col-sm-7.no-side-padding
       #map

block footscript
  script.
    function initMap(){ 
      function listStar(i){
        listElement = document.getElementById("offers-list").childNodes[0].childNodes[i];
        $(listElement).addClass('starring');
        console.log(listElement);
      }
      function listUnstar(i){
        listElement = document.getElementById("offers-list").childNodes[0].childNodes[i];
        $(listElement).removeClass('starring');
        console.log(listElement);
      }
      function openListInfos(i){
        listElement = document.getElementById("offers-list").childNodes[0].childNodes[i];
        listElement.childNodes[2].childNodes[0].click();
        console.log(listElement.childNodes[2]);
      }
      var mapDiv = document.getElementById('map');
      var map = new google.maps.Map(mapDiv, {
        center: {lat: 45.503, lng: -73.613},
        zoom: 12,
        streetViewControl: false,
        scrollwheel: false,
        mapTypeControl: false,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      });
      //Generate markers
      var imageSol = {
      url: '/images/Perso/blue-icon-marker.svg', // image is 512 x 512
      scaledSize : new google.maps.Size(30, 36)
      };
      var imageEnv = {
      url: '/images/Perso/green-icon-marker.svg', // image is 512 x 512
      scaledSize : new google.maps.Size(30, 36)
      };
      var imageCul = {
      url: '/images/Perso/yellow-icon-marker.svg', // image is 512 x 512
      scaledSize : new google.maps.Size(30, 36)
      };
      var acts = !{JSON.stringify(activities)};
      var lts = !{JSON.stringify(longterms)};
      var infowindows = [];
      var markers = [];
      var optionsMS = {
            gridSize: 50,
            maxZoom: 13,
            minimumClusterSize: 15,
            imagePath: '/images/m'
        };
      function attachInfoWindow(marker, infoWindow, act, i){
        marker.addListener('click', function(){
          $("."+act._id).modal();
        });
        marker.addListener('mouseover', function(){
          infoWindow.open(map, marker);
          listStar(i);
        });
        marker.addListener('mouseout', function(){
          infoWindow.close();
          listUnstar(i);
        });
      };
        var legend = document.createElement('div');
        legend.id = 'legend';
        var content = [];
        content.push('<i class="fa fa-envira" id="leaf"> Environnement</i><br>');
        content.push('<i class="fa fa-heart" id="soli"> Solidarité</i><br>');
        content.push('<i class="fa fa-institution" id="cult"> Culture</i><br>');
        legend.innerHTML = content.join('');
        legend.index = 1;
        map.controls[google.maps.ControlPosition.LEFT_TOP].push(legend);
      for(i=0; i<acts.length; i++){
        console.log(acts[i].intitule + " marker generated with lat and lon : " + acts[i].lat + acts[i].lon);
        var act = acts[i];
        var lati = act.lat+0.0015*(Math.random()-0.5);
        var longi = act.lon+0.0015*(Math.random()-0.5);
        infowindows[i] = new google.maps.InfoWindow({
          content: act.org_name + '<br>' + act.intitule
        });
        //choix du marqueur en fonction de la cause, changer avec le json
        if (acts[i].cause=='Environnement'){
        markers[i] = new google.maps.Marker({
          position: {lat: lati, lng: longi},
          map: map,
          icon: imageEnv,
          clickable: true
        });
        }
        if (acts[i].cause=='Solidarité'){
        markers[i] = new google.maps.Marker({
          position: {lat: lati, lng: longi},
          map: map,
          icon: imageSol,
          clickable: true
        });
        }
        if (acts[i].cause=='Culture'){
        markers[i] = new google.maps.Marker({
          position: {lat: lati, lng: longi},
          map: map,
          icon: imageCul,
          clickable: true
        });
        }
        attachInfoWindow(markers[i], infowindows[i], act, i);
      };
      //Attach marker to each longterms
      for(j=0+acts.length; j<lts.length+acts.length; j++){
        console.log(lts[j-acts.length].long_term.intitule + " marker generated with lat and lon : " + lts[j-acts.length].long_term.lat + lts[j-acts.length].long_term.lon);
        var lt = lts[j-acts.length];
        var latj = lt.long_term.lat+0.0015*(Math.random()-0.5);
        var longj = lt.long_term.lon+0.0015*(Math.random()-0.5);
        infowindows[j] = new google.maps.InfoWindow({
          content: lt.org_name + '<br>' + lt.long_term.intitule
        });
        console.log('lts[j-acts.length] : '+ JSON.stringify(lts[j-acts.length]));
        //choix du marqueur en fonction de la cause, changer avec le json
        if (lts[j-acts.length].cause=='Environnement'){
        markers[j] = new google.maps.Marker({
          position: {lat: latj, lng: longj},
          map: map,
          icon: imageEnv,
          clickable: true
        });
        }
        else if (lts[j-acts.length].cause=='Solidarité'){
        markers[j] = new google.maps.Marker({
          position: {lat: latj, lng: longj},
          map: map,
          icon: imageSol,
          clickable: true
        });
        }
        else if (lts[j-acts.length].cause=='Culture'){
        markers[j] = new google.maps.Marker({
          position: {lat: latj, lng: longj},
          map: map,
          icon: imageCul,
          clickable: true
        });
        } else {
          markers[j] = null;
        }
        attachInfoWindow(markers[j], infowindows[j], lt.long_term, j);
      };
      var markerCluster = new MarkerClusterer(map, markers, optionsMS);
    }
  script.
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-82053185-2', 'auto');
      ga('send', 'pageview');
  script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRPJIqo9jqMb99E47aKuO64rxugd3S-Wk&callback=initMap"
         async defer)
  // jQuery (necessary for Bootstrap's JavaScript plugins)
  script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js')
  // jQuery redirection plugin
  script(src="/bower_components/jquery.redirect/jquery.redirect.js", type="text/javascript")
  // jQuery
  script(src='/javascripts/my-jquery.js')
  // Include all compiled plugins (below), or include individual files as needed
  script(src='/javascripts/bootstrap.min.js')
  //Modal bootstrap
  script(type='text/javascript').
    $('#myModal').on('shown.bs.modal', function () {
      $('#myInput').focus();
    });
